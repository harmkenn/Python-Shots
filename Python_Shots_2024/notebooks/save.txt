import streamlit as st
import pandas as pd
import folium
from streamlit_folium import folium_static
from folium import plugins
from numpy import radians, sin, exp, cos, tan, sqrt, arctan, pi, log
import matplotlib.pyplot as plt
from apps import z_functions as zf

def app():
    # title of the app
    lu = st.sidebar.text_input('Lookup: ') 
    if len(lu)>=3:
        where = zf.lookup(lu)
        st.sidebar.write(where[0])
        st.sidebar.write('Lat: '+str(where[1])+' Lon: '+str(where[2]))
        st.sidebar.write('MGRS: '+where[3])
        alt = zf.elevation(where[1],where[2])
        st.sidebar.write('Alt :'+str(round(alt,2))+' Meters')
    st.markdown('Physics Shot')

    c1,c2,c3 = st.columns((1,3,1))

    with c1:
        
        if 'c_lpmgrs' not in st.session_state: st.session_state['c_lpmgrs'] = '36SYC6482056356'
        c_lpmgrs = st.session_state['c_lpmgrs']
        c_lpmgrs = st.text_input('Launch Point (MGRS):',c_lpmgrs, key = 'c1')
        st.session_state['c_lpmgrs'] = c_lpmgrs
        lp = zf.MGRS2LL(c_lpmgrs)
        l_lat = lp[1] #Launch Latitude
        l_lon = lp[2] #Launch Longitude
        lp_alt = zf.elevation(l_lat,l_lon) #Launch Altitude in meters
        #st.write(lp_alt)
        lp_alt = float(st.text_input('launch Altitude (meters)',lp_alt))

        with c2:
            # map 
            map = folium.Map(location=[lp[1],lp[2]], zoom_start=-1.36*log(20000/1000)+15)
            # add tiles to map
            attribution = "Map tiles by Google"
            folium.raster_layers.TileLayer('Open Street Map', attr=attribution).add_to(map)
            folium.raster_layers.TileLayer('Stamen Terrain', attr=attribution).add_to(map)
            # Add custom base maps to folium
            folium.raster_layers.TileLayer(
                    tiles = 'https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}',
                    attr = 'Google',
                    name = 'Google Maps',
                    overlay = False,
                    control = True
                ).add_to(map)
            folium.raster_layers.TileLayer(
                    tiles = 'https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}',
                    attr = 'Google',
                    name = 'Google Satellite',
                    overlay = False,
                    control = True
                ).add_to(map)
            folium.raster_layers.TileLayer(
                    tiles = 'https://mt1.google.com/vt/lyrs=p&x={x}&y={y}&z={z}',
                    attr = 'Google',
                    name = 'Google Terrain',
                    overlay = False,
                    control = True
                ).add_to(map)

            # add layer control to show different maps
            folium.LayerControl().add_to(map)
            
            # plugin for mini map
            minimap = plugins.MiniMap(toggle_display=True)

            # add minimap to map
            map.add_child(minimap)
            
            # add scroll zoom toggler to map
            plugins.ScrollZoomToggler().add_to(map)

            # add full screen button to map
            plugins.Fullscreen(position='topright').add_to(map)
            
            # add marker to map https://fontawesome.com/v5.15/icons?d=gallery&p=2&m=free
            pal = folium.features.CustomIcon('Icons/paladin.jpg',icon_size=(30,20))
            tgt = folium.features.CustomIcon('Icons/target.png',icon_size=(25,25))
            
            folium.Marker(location=[lp[1],lp[2]], color='green',popup=c_lpmgrs, tooltip='Launch Point',icon=pal).add_to(map)
            #folium.Marker(location=[deets[0],deets[1]], color='green',popup=ip[1], tooltip='Impact Point',icon=tgt).add_to(map)        

            map.add_child(folium.LatLngPopup())

            folium_static(map)
